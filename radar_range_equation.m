% Radar Signal Processing Project
% Radar Range Equation

% Author: Dr. Ronny Guendel
% Date: 26. May '24
% Website: https://rgundel.github.io/
% Code language: MATLAB
% Environment: MATLAB

%% Project Overview

% This repository contains MATLAB code for various radar range equations. 
% The content is organized into different sections covering fundamental 
% concepts and practical implementations in radar signal processing.

%% Received Power of a Target

% The received power (Pr) of a target is calculated using the radar range 
% equation, which takes into account the transmitted power (Pt), the gains 
% of the transmitting (Gt) and receiving (Gr) antennas, the wavelength 
% (lambda), the radar cross-section of the target (sigma), and the range 
% to the target (R). This equation illustrates how the power diminishes 
% with the fourth power of the range, emphasizing the importance of each 
% factor in determining the radar system's effectiveness.

% Pr = (Pt * Gt * Gr * lambda^2 * sigma) / ((4 * pi)^3 * R^4)

% Where:
% Pr = received power
% Pt = transmitted power
% Gt, Gr = gain of the transmitting and receiving antennas
% lambda = wavelength
% sigma = radar cross-section of the target
% R = range to the target

% Given values
Pt = 1;  % Transmitted power in watts
Gt = 10;  % Transmitting antenna gain
Gr = 10;  % Receiving antenna gain
lambda = 0.03;  % Wavelength in meters
sigma = 1;  % RCS in square meters
R = 1000;  % Range in meters

% Calculating the received power Pr
Pr = (Pt * Gt * Gr * lambda^2 * sigma) / ((4 * pi)^3 * R^4);
disp(['Received Power: ', num2str(Pr), ' watts']);

%% Receiver Thermal Noise

% Thermal noise, often referred to as "white" noise due to its uniform power 
% spectral density, is a significant factor in radar systems, impacting the 
% ability to detect target signals. This noise, generated by various 
% environmental sources and internal receiver components, is proportional 
% to the receiver bandwidth and system temperature. The noise power can be 
% quantified using the equation:

% P_n = k T_S B = k T_0 F B

% Where:
% k is Boltzmann constant (1.38 × 10^−23 Watt·sec/K or 1.38 × 10^−23 Joule/K)
%    Note to units: 1 Watt = 1 Joule per second (1W = 1 J/s)
% T_0 is the standard temperature (290 K).
% T_s is the system noise temperature (T_s = T_0 F).
% B is the instantaneous receiver bandwidth in Hz.
% F is the noise figure of the receiver subsystem (unitless).

% As can be seen from the equation, the noise power is linearly proportional 
% to the receiver bandwidth. However, reducing the receiver bandwidth to 
% decrease noise power can adversely affect the target signal, as the 
% bandwidth of the target’s signal in one received pulse is approximately 
% the reciprocal of the pulse width (B ≈ 1/τ). If the receiver bandwidth is 
% smaller than the target signal bandwidth, target power is reduced and 
% range resolution suffers. Conversely, if the receiver bandwidth is larger, 
% the signal-to-noise ratio will decrease. The optimal bandwidth is typically 
% around 1.2/τ, but 1/τ is often used as an approximation [1].

% Constants and assumed values
k = 1.38e-23;  % Boltzmann constant in Joule/K
T_0 = 290;  % Standard temperature in K
F = 3;  % Noise figure of the receiver subsystem (unitless)
B = 1e6;  % Receiver bandwidth in Hz (1 MHz)

% Calculating the system noise temperature
T_s = T_0 * F;

% Calculating the noise power Pn
Pn = k * T_s * B;
disp(['Noise Power: ', num2str(Pn), ' watts']);

%% Signal-to-noise ratio and the radar range equation

% When the received target signal power (Pr) is divided by the noise power 
% (Pn), the result is called the signal-to-noise ratio (SNR). For a discrete 
% target, this ratio is given by the following equation:

% SNR = Pr / Pn

% Substituting the radar range equation for Pr and the expression for Pn, we get:

% SNR = (Pt * Gt * Gr * lambda^2 * sigma) / ((4 * pi)^3 * R^4 * Pn)
%     = (Pt * Gt * Gr * lambda^2 * sigma) / ((4 * pi)^3 * R^4 * k * T_0 * F * B)

% Calculating the Signal-to-Noise Ratio (SNR)
SNR = Pr / Pn;
disp(['Signal-to-Noise Ratio (SNR): ', num2str(SNR)]);

%% Signal-to-Noise Ratio in Decibels

% The Signal-to-Noise Ratio (SNR) can also be expressed in decibels (dB), 
% which is a logarithmic scale. This is often more convenient for analysis 
% and comparison in radar systems.

% The conversion from linear SNR to dB is given by the formula:

% SNR_dB = 10 * log10(SNR)

% For dB conversion
SNR_dB = 10 * log10(SNR);
disp(['Signal-to-Noise Ratio (SNR) in dB: ', num2str(SNR_dB), ' dB']);

%% Signal-to-noise ratio in dB as Summation Equation 

% The Signal-to-Noise Ratio (SNR) in decibels (dB) can be computed by 
% converting each component of the linear SNR equation to dB before per-
% forming the calculations. This approach simplifies the multiplication of 
% factors into a summation of their dB equivalents.

% SNR_dB =  P_t_dB 
%           + G_t_dB 
%           + G_r_dB 
%           + 20 log10(lambda) 
%           + 10 log10(sigma) 
%           - factor_dB 
%           - 40 log10(R) 
%           - k_dB 
%           - T0_dB 
%           - F_dB 
%           - B_dB

% Where:
% P_{t_{\text{dB}}} = 10 \log_{10}(P_t)
% G_{t_{\text{dB}}} = 10 \log_{10}(G_t)
% G_{r_{\text{dB}}} = 10 \log_{10}(G_r)
% 20 \log_{10}(\lambda) converts the wavelength term to dB (since \lambda^2 becomes 2 \cdot 10 \log_{10}(\lambda))
% 10 \log_{10}(\sigma) converts the radar cross-section to dB
% \text{factor}_{\text{dB}} = 10 \log_{10}((4 \pi)^3)
% 40 \log_{10}(R) converts the range term to dB (since R^4 becomes 4 \cdot 10 \log_{10}(R))
% k_{\text{dB}} = 10 \log_{10}(k)
% T_{0_{\text{dB}}} = 10 \log_{10}(T_0)
% F_{\text{dB}} = 10 \log_{10}(F)
% B_{\text{dB}} = 10 \log_{10}(B)

% Converting to dB
Pt_dB = 10 * log10(Pt);
Gt_dB = 10 * log10(Gt);
Gr_dB = 10 * log10(Gr);
lambda_dB = 20 * log10(lambda);
sigma_dB = 10 * log10(sigma);
R_dB = 40 * log10(R);
k_dB = 10 * log10(k);
T0_dB = 10 * log10(T_0);
F_dB = 10 * log10(F);
B_dB = 10 * log10(B);
factor_dB = 10 * log10((4 * pi)^3);

% Summing up the dB values to get SNR in dB
SNR_dB = Pt_dB + Gt_dB + Gr_dB + lambda_dB + sigma_dB - factor_dB - R_dB - k_dB - T0_dB - F_dB - B_dB;
disp(['Signal-to-Noise Ratio (SNR) in dB: ', num2str(SNR_dB), ' dB']);

%% Reference: 
% [1] Richards, Mark A., James A. Scheer and William A. Holm. "Principles  
%     of Modern Radar: Basic Principles." (2013).

